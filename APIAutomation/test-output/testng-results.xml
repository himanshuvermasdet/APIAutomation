<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="33063" started-at="2016-05-17T07:08:08Z" finished-at="2016-05-17T07:08:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="33063" started-at="2016-05-17T07:08:08Z" finished-at="2016-05-17T07:08:41Z">
      <class name="com.proptiger.qa.api.test.MediaServiceTestClass">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" name="setUp" is-config="true" duration-ms="10" started-at="2016-05-17T12:38:08Z" finished-at="2016-05-17T12:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUpEnvironment(java.lang.String)[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" name="setUpEnvironment" is-config="true" duration-ms="2428" started-at="2016-05-17T12:38:08Z" finished-at="2016-05-17T12:38:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Beta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpEnvironment -->
        <test-method status="PASS" signature="createIDList()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" name="createIDList" is-config="true" duration-ms="1" started-at="2016-05-17T12:38:11Z" depends-on-methods="com.proptiger.qa.apibase.APITestBase.setUpEnvironment" finished-at="2016-05-17T12:38:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createIDList -->
        <test-method status="PASS" signature="beforeEveryClass(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="beforeEveryClass" is-config="true" duration-ms="3" started-at="2016-05-17T12:38:11Z" finished-at="2016-05-17T12:38:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mac]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MIDL]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[himanshu.verma@proptiger.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[all]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryClass -->
        <test-method status="PASS" signature="initializeClassCustomerLoganBFF()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="initializeClassCustomerLoganBFF" is-config="true" duration-ms="8" started-at="2016-05-17T12:38:11Z" finished-at="2016-05-17T12:38:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeClassCustomerLoganBFF -->
        <test-method status="PASS" signature="beforeEveryMethod([Ljava.lang.Object;)[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="beforeEveryMethod" is-config="true" duration-ms="154" started-at="2016-05-17T12:38:11Z" finished-at="2016-05-17T12:38:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5cc126dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-05-17T12:38:11Z" finished-at="2016-05-17T12:38:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="getImage(java.lang.String, java.util.HashMap)[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="getImage" duration-ms="24205" started-at="2016-05-17T12:38:11Z" data-provider="v1getImage" finished-at="2016-05-17T12:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Verify Getting new image Information]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{preReqId=null, groupName=SANITY, dpName=getImage_v1, testSpecificData6=null, testSpecificData3=null, testSpecificData2=YES, preReqSheet=null, testSpecificData5=null, testSpecificData4=null, reqDTO=RequestDTO{apiPath='/data/v1/entity/image', methodType='GET', headerJson='{
"Content-Type": "application/json"
}', pathParamJson='null', queryParamJson='{
"debug": "true", "objectType":"project",
"objectId": 654896,
"imageType": "sitePlan"
}', requestBody='null', responseCode=200, expectedResponseJson='{
	"statusCode": "2XX",
	"version": "A",
	"data":[ {
		"id": 195297,
		"imageTypeId": 10,
		"objectId": 654896,
		"path": "1/154896/10/",
		"pageUrl": "gallery/risha-developers-aakash-bungalows-site-plan-654896-195297",
		"statusId": 1,
		"createdAt": "_NotToAssert_",
		"sizeInBytes": 175941,
		"width": 1182,
		"height": 1160,
		"waterMarkName": "195297.jpeg",
		"active": true,
		"activeStatus": 1,
		"seoName": "risha-developers-aakash-bungalows-site-plan-195297.jpeg",
		"absolutePath": "https://im.proptiger-ws.com/1/154896/10/risha-developers-aakash-bungalows-site-plan-195297.jpeg",
		"imageType": {
			"id": 10,
			"objectType": {
				"id": 1,
				"type": "project"
			},
			"mediaType": {
				"id": 1,
				"name": "Image"
			},
			"objectTypeId": 1,
			"mediaTypeId": 1,
			"type": "sitePlan",
			"domainId": 2,
			"priority": 5,
			"imageSitemapEnabled": 1,
			"displayName": "Site Plan",
			"mediaDuplicacyRule": {
				"id": 1,
				"duplicacyRule": "NO_DUPLICATES"
			}
		},
            "masterImageStatuses": {
                "id":  "_NotToAssert_",
                "status": "_NotToAssert_"
            }
        }
    ]
}', expectedDB='null'}, testSpecificData1=null}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[One of the API's got failed  expected [0] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: One of the API's got failed  expected [0] but found [2]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at com.proptiger.qa.api.test.MediaServiceTestClass.getImage(MediaServiceTestClass.java:618)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImage -->
        <test-method status="PASS" signature="deleteImageIds()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="deleteImageIds" is-config="true" duration-ms="1" started-at="2016-05-17T12:38:36Z" finished-at="2016-05-17T12:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteImageIds -->
        <test-method status="PASS" signature="beforeEveryMethod([Ljava.lang.Object;)[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="beforeEveryMethod" is-config="true" duration-ms="146" started-at="2016-05-17T12:38:36Z" finished-at="2016-05-17T12:38:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@89c10b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-05-17T12:38:36Z" finished-at="2016-05-17T12:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getImage(java.lang.String, java.util.HashMap)[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="getImage" duration-ms="5760" started-at="2016-05-17T12:38:36Z" data-provider="v1getImage" finished-at="2016-05-17T12:38:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Verify Getting new image Information]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{preReqId=preReqpostImage_v1, groupName=SANITY, dpName=getImage_v1, testSpecificData6=null, testSpecificData3=null, testSpecificData2=null, preReqSheet=postImage_v1, testSpecificData5=null, testSpecificData4=null, reqDTO=RequestDTO{apiPath='/data/v1/entity/image', methodType='GET', headerJson='{
"Content-Type": "application/json"
}', pathParamJson='null', queryParamJson='{
"debug": "true", "objectType":"project",
"objectId": 111222,
"imageType": "clusterPlan"
}', requestBody='null', responseCode=200, expectedResponseJson='{
	"statusCode": "2XX",
	"version": "A",
	"data":[ {
		"id": 3574839,
		"imageTypeId": 2,
		"objectId": 111222,
		"path": "1/111222/2/",
		"pageUrl": "gallery/111222-3574839",
		"statusId": 2,
		"createdAt": "_NotToAssert_",
		"sizeInBytes": 369457,
		"width": 1525,
		"height": 953,
		"waterMarkName": "3574839.jpeg",
		"active": true,
		"activeStatus": 1,
		"seoName": "3574839.jpeg",
		"absolutePath": "https://im.proptiger-ws.com/1/111222/2/3574839.jpeg",
		"imageType": {
			"id": 2,
			"objectType": {
				"id": 1,
				"type": "project"
			},
			"mediaType": {
				"id": 1,
				"name": "Image"
			},
			"objectTypeId": 1,
			"mediaTypeId": 1,
			"type": "clusterPlan",
			"domainId": 2,
			"priority": 8,
			"imageSitemapEnabled": 1,
			"displayName": "Cluster Plan",
			"mediaDuplicacyRule": {
				"id": 1,
				"duplicacyRule": "NO_DUPLICATES"
			}
		},
            "masterImageStatuses": {
                "id":  "_NotToAssert_",
                "status": "_NotToAssert_"
            }
        }
    ]
}', expectedDB='null'}, testSpecificData1=null}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImage -->
        <test-method status="PASS" signature="deleteImageIds()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="deleteImageIds" is-config="true" duration-ms="0" started-at="2016-05-17T12:38:41Z" finished-at="2016-05-17T12:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteImageIds -->
        <test-method status="PASS" signature="afterEveryClass()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" test-instance-name="Verify Getting new image Information" name="afterEveryClass" is-config="true" duration-ms="1" started-at="2016-05-17T12:38:41Z" finished-at="2016-05-17T12:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEveryClass -->
        <test-method status="PASS" signature="afterEachTestCycle()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" name="afterEachTestCycle" is-config="true" duration-ms="2" started-at="2016-05-17T12:38:41Z" finished-at="2016-05-17T12:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestCycle -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.proptiger.qa.api.test.MediaServiceTestClass@1ce92674]" name="afterSuite" is-config="true" duration-ms="6775" started-at="2016-05-17T12:38:42Z" finished-at="2016-05-17T12:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.proptiger.qa.api.test.MediaServiceTestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
